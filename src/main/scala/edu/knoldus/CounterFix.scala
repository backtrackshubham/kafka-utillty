package edu.knoldus

import java.nio.file.Files
import java.util
import java.util.Properties

import org.apache.kafka.clients.producer.{KafkaProducer, ProducerRecord}
import org.apache.kafka.common.header.Header

object CounterFix extends App {
//  val unitId = "0df6d895-2ae8-498a-adc1-5fc96cbd583e"
//  val imageIds = List("855b8c97-9a97-4ac8-9bb2-27ed954dae76")
  val index = 1199
  val unitId = "bec5746c-70d1-4a64-849d-76814a0808be"
  val imageIds = List("02bea67a-190a-11ea-8c50-00044be65596","03f7a784-1910-11ea-b541-00044be65596","05213d2c-1916-11ea-b929-00044be65596","065a507e-191c-11ea-8101-00044be65596","093f9d8c-190b-11ea-9189-00044be65596","0a5aa128-1922-11ea-b22c-00044be65596","0a67f92e-1911-11ea-b1fe-00044be65596","0ba0d4ea-1917-11ea-a2ec-00044be65596","0ccc64f0-191d-11ea-a26b-00044be65596","0fb15f06-190c-11ea-8425-00044be65596","10d9b058-1912-11ea-8d81-00044be65596","12129af6-1918-11ea-8204-00044be65596","162183ce-190d-11ea-90e4-00044be65596","1749a6f4-1913-11ea-b3d5-00044be65596","18846bf2-1919-11ea-9283-00044be65596","18a66a40-191e-11ea-a5b6-00044be65596","1c922212-190e-11ea-a9cb-00044be65596","1d6487de-1922-11ea-a140-00044be65596","1dbad084-1914-11ea-9512-00044be65596","1ef6344c-191a-11ea-a315-00044be65596","21cc5e96-1909-11ea-a670-00044be65596","23034972-190f-11ea-aff9-00044be65596","242ce532-1915-11ea-b293-00044be65596","25669e88-191b-11ea-8b0e-00044be65596","258ae51c-1921-11ea-be2e-00044be65596","283d0cca-190a-11ea-aea1-00044be65596","2975c84c-1910-11ea-9b75-00044be65596","2a9ecaba-1916-11ea-b588-00044be65596","2bd85f9e-191c-11ea-8f11-00044be65596","2ebe0bc0-190b-11ea-bccb-00044be65596","2fe50caa-1911-11ea-ad46-00044be65596","3069dc1c-1922-11ea-b7b5-00044be65596","311ff6b0-1917-11ea-8310-00044be65596","32496070-191d-11ea-91c1-00044be65596","352e1fbc-190c-11ea-89f6-00044be65596","365664a2-1912-11ea-a424-00044be65596","3791b21c-1918-11ea-9384-00044be65596","38969232-1921-11ea-b31f-00044be65596","3b9eda7a-190d-11ea-bd77-00044be65596","3cc7dcd4-1913-11ea-bca2-00044be65596","3e029cc8-1919-11ea-aaff-00044be65596","3e2522ca-191e-11ea-8405-00044be65596","40c53526-1908-11ea-872d-00044be65596","42105fea-190e-11ea-97be-00044be65596","43390f9c-1914-11ea-bb59-00044be65596","437e2484-1922-11ea-97d5-00044be65596","4474a5c8-191a-11ea-b0cd-00044be65596","474a60a0-1909-11ea-93df-00044be65596","48811486-190f-11ea-a757-00044be65596","49ac4a3c-1915-11ea-a267-00044be65596","4ae61d0a-191b-11ea-9c1e-00044be65596","4b9b4c7e-1921-11ea-9a15-00044be65596","4dbad2c0-190a-11ea-8969-00044be65596","4ef2bf76-1910-11ea-a5d8-00044be65596","501ca104-1916-11ea-8e05-00044be65596","5156fee2-191c-11ea-957d-00044be65596","543b513c-190b-11ea-920c-00044be65596","5563e7e4-1911-11ea-82b3-00044be65596","569037c4-1922-11ea-b666-00044be65596","569d4b04-1917-11ea-8ed0-00044be65596","57c6beec-191d-11ea-a6d9-00044be65596","5aac766c-190c-11ea-b796-00044be65596","5bd4cae8-1912-11ea-b6e4-00044be65596","5d0e7caa-1918-11ea-8d16-00044be65596","5eabd4c8-1921-11ea-b182-00044be65596","611c9f80-190d-11ea-a5de-00044be65596","6245cfb6-1913-11ea-9da5-00044be65596","638039ec-1919-11ea-bb9b-00044be65596","63a3f954-191e-11ea-ae7d-00044be65596","6656a522-1908-11ea-92a3-00044be65596","678fedda-190e-11ea-9f55-00044be65596","68b6fafe-1914-11ea-90de-00044be65596","69f1f47c-191a-11ea-9d52-00044be65596","6cc7ce6c-1909-11ea-9873-00044be65596","6dff5dc6-190f-11ea-b8fb-00044be65596","6f2a22ca-1915-11ea-b956-00044be65596","70637e2e-191b-11ea-8a41-00044be65596","71bc7d1a-1921-11ea-9219-00044be65596","73392a74-190a-11ea-b5db-00044be65596","746fdbf8-1910-11ea-a8b1-00044be65596","759aa8c2-1916-11ea-8759-00044be65596","76d4035e-191c-11ea-a4ec-00044be65596","79b8e636-190b-11ea-935d-00044be65596","7ae028ac-1911-11ea-a6d8-00044be65596","7c1c49ac-1917-11ea-911e-00044be65596","802a0242-190c-11ea-8e67-00044be65596","81530d20-1912-11ea-b72c-00044be65596","828dfafa-1918-11ea-a212-00044be65596","82a3b160-191d-11ea-89e2-00044be65596","84d8f7e8-1921-11ea-b393-00044be65596","869adc72-190d-11ea-a303-00044be65596","87c30452-1913-11ea-93dd-00044be65596","88fc90c6-1919-11ea-b5db-00044be65596","892f7f7c-191e-11ea-a3f5-00044be65596","8bd5795e-1908-11ea-b352-00044be65596","8d0c275e-190e-11ea-9a91-00044be65596","8e35e9de-1914-11ea-b7bb-00044be65596","8f6f9b46-191a-11ea-858a-00044be65596","9245eafc-1909-11ea-b664-00044be65596","937d5da0-190f-11ea-9d70-00044be65596","94a7bf1c-1915-11ea-b293-00044be65596","95e042c2-191b-11ea-8fcb-00044be65596","97f9ca00-1921-11ea-a056-00044be65596","98b64d36-190a-11ea-9b8f-00044be65596","99eef814-1910-11ea-83a7-00044be65596","9b18f87e-1916-11ea-a1d1-00044be65596","9c51cd32-191c-11ea-a2fe-00044be65596","9f378462-190b-11ea-87e4-00044be65596","a05ffc92-1911-11ea-b956-00044be65596","a19932da-1917-11ea-8a71-00044be65596","a5a8c3b4-190c-11ea-b35e-00044be65596","a6d044be-1912-11ea-b5fa-00044be65596","a80bce42-1918-11ea-9e50-00044be65596","a82e2cb2-191d-11ea-82a4-00044be65596","ab2821f8-1921-11ea-9f1e-00044be65596","ac18c0e0-190d-11ea-8832-00044be65596","ad4246a2-1913-11ea-8ccf-00044be65596","ae7c57be-1919-11ea-8f75-00044be65596","aead83de-191e-11ea-8770-00044be65596","b153c9a6-1908-11ea-b007-00044be65596","b289bd70-190e-11ea-a843-00044be65596","b3b35ef8-1914-11ea-a726-00044be65596","b4ed90da-191a-11ea-b38e-00044be65596","b7c2aad6-1909-11ea-9bbe-00044be65596","b8fb0fd2-190f-11ea-bdc9-00044be65596","ba2545fc-1915-11ea-9f6d-00044be65596","bb5e7406-191b-11ea-bfb8-00044be65596","be1f3b20-1921-11ea-b8e1-00044be65596","be36ce96-190a-11ea-b53c-00044be65596","bf6b82ec-1910-11ea-b1d3-00044be65596","c098e7f8-1916-11ea-bbe3-00044be65596","c1cf2fb4-191c-11ea-9e62-00044be65596","c4b68fc6-190b-11ea-aabb-00044be65596","c5de1134-1911-11ea-9826-00044be65596","c717bab8-1917-11ea-b80b-00044be65596","cb2559b8-190c-11ea-bd53-00044be65596","cc4d7ff4-1912-11ea-b63a-00044be65596","cd88b284-1918-11ea-b02f-00044be65596","cdac21c4-191d-11ea-a54b-00044be65596","d12eb48e-1921-11ea-b826-00044be65596","d1984f70-190d-11ea-9332-00044be65596","d2bfbcde-1913-11ea-b564-00044be65596","d3fa25e8-1919-11ea-8bca-00044be65596","d42aef02-191e-11ea-8d21-00044be65596","d6d128ae-1908-11ea-86f0-00044be65596","d807bb38-190e-11ea-98ad-00044be65596","d93196c2-1914-11ea-91e8-00044be65596","da6bb1c0-191a-11ea-b3a4-00044be65596","dd421a9e-1909-11ea-90cd-00044be65596","de7a1e42-190f-11ea-8408-00044be65596","dfa37b50-1915-11ea-ae31-00044be65596","e0ddd028-191b-11ea-b6af-00044be65596","e3c20c48-190a-11ea-bfa8-00044be65596","e43f6bd6-1921-11ea-8211-00044be65596","e4ea177c-1910-11ea-9880-00044be65596","e6242ea6-1916-11ea-bdad-00044be65596","e74d6d28-191c-11ea-940b-00044be65596","ea32ac9e-190b-11ea-ae7e-00044be65596","eb59e622-1911-11ea-b302-00044be65596","ec951092-1917-11ea-aaed-00044be65596","f0a3894e-190c-11ea-a200-00044be65596","f1cc5516-1912-11ea-b6d4-00044be65596","f306f3d6-1918-11ea-834e-00044be65596","f32a57fe-191d-11ea-85a2-00044be65596","f7157b9c-190d-11ea-9130-00044be65596","f756813c-1921-11ea-9a41-00044be65596","f83c5828-1913-11ea-b78c-00044be65596","f977e09e-1919-11ea-a421-00044be65596","fc4eae80-1908-11ea-a5b0-00044be65596","fd8540ce-190e-11ea-8284-00044be65596","feaee4f4-1914-11ea-903c-00044be65596","ffe91eba-191a-11ea-a98f-00044be65596","fffbdc2a-1920-11ea-a049-00044be65596")
  def writeImageToKafka(topic: String, key: String, messageHeaders: String, json: Array[Byte]): Unit = {
    val head: Header = new Header(){
      override def key(): String = "image-key"
      override def value(): Array[Byte] = messageHeaders.getBytes()
    }
    val headers = new util.ArrayList[Header]()
    headers.add(head)
    byteArrayProducer.send(new ProducerRecord[String, Array[Byte]](topic, null, key, json, headers)).get()
  }
  private val byteArrayProps = new Properties()
//  byteArrayProps.put("bootstrap.servers", "192.168.11.183:9092")
  byteArrayProps.put("bootstrap.servers", "10.3.2.4:9092")
  byteArrayProps.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer")
  byteArrayProps.put("value.serializer", "org.apache.kafka.common.serialization.ByteArraySerializer")
  byteArrayProps.put("max.request.size", "1048576")
  private val byteArrayProducer = new KafkaProducer[String, Array[Byte]](byteArrayProps)
  val byteArray = Files.readAllBytes(FutureHelper.fileList.head.toPath)
  imageIds map{imageId =>
    writeImageToKafka("Image_Message_Test",
      s"$unitId-$imageId-L",f"${unitId}_$imageId-$index%05d-L.jpg", byteArray)
    writeImageToKafka("Image_Message_Test",
      s"$unitId-$imageId-R",f"${unitId}_$imageId-$index%05d-R.jpg", byteArray)
  }


  println(imageIds.length)
}
